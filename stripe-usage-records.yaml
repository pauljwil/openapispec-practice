openapi: '3.0.1'
info:
  title: Stripe Usage Records
  description: |
    Usage records allow you to report customer usage and metrics to Stripe for metered billing of subscription prices.

    Related guide&#58; [Metered Billing](https://stripe.com/docs/billing/subscriptions/metered-billing).
  version: '2020-03-02'
servers:
- url: https://api.stripe.com/v1
paths:
  /subscription_items/{subscription_item}/usage_records:
    post:
      description: |
        Creates a usage record for a specified subscription item and date, and fills it with a quantity.

        Usage records provide `quantity` information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the [metered billing](https://stripe.com/docs/billing/subscriptions/metered-billing) plan, Stripe helps you send accurate invoices to your customers.

        The default calculation for usage is to add up all the `quantity` values of the usage records within a billing period. You can change this default behavior with the billing plan's `aggregate_usage` [parameter](https://stripe.com/docs/api/plans/create#create_plan-aggregate_usage). When there is more than one usage record with the same timestamp, Stripe adds the quantity values together. In most cases, this is the desired resolution, however, you can change this behavior with the `action` parameter.

        The default pricing model for metered billing is [per-unit](https://stripe.com/docs/api/plans/object#plan_object-billing_scheme) pricing. For finer granularity, you can configure metered billing to have a [tiered](https://stripe.com/docs/billing/subscriptions/tiers) pricing model.
      parameters:
      - name: subscription_item
        in: path
        description: The ID of the subscription item for this usage record.
        required: true
        schema:
          type: string
      requestBody:
        description: New usage record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newUsageRecord'
        required: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usageRecord'
      x-codegen-request-body-name: newUsageRecord
  /subscription_items/{subscription_item}/usage_record_summaries:
    get:
      description: |
        For the specified subscription item, returns a list of summary objects. Each object in the list provides usage information that's been summarized from multiple usage records and over a subscription billing period (e.g., 15 usage records in the billing plan's month of September).

        The list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn't ended yet. Since new usage records can still be added, the returned summary information for the subscription item's ID should be seen as unstable until the subscription billing period ends.
      parameters:
      - name: subscription_item
        in: path
        description: Only summary items for the given subscription item.
        required: true
        schema:
          type: string
      - name: ending_before
        in: query
        description: A cursor for use in pagination. `ending_before` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, starting with `obj_bar`, your subsequent
          call can include `ending_before=obj_bar` in order to fetch the previous
          page of the list.
        schema:
          type: string
      - name: limit
        in: query
        description: A limit on the number of objects to be returned. Limit can range
          between 1 and 100, and the default is 10.
        schema:
          maximum: 100
          minimum: 1
          type: integer
      - name: starting_after
        in: query
        description: A cursor for use in pagination. `starting_after` is an object
          ID that defines your place in the list. For instance, if you make a list
          request and receive 100 objects, ending with `obj_foo`, your subsequent
          call can include `starting_after=obj_foo` in order to fetch the next page
          of the list
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usageRecordSummary'
components:
  schemas:
    usageRecord:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the object.
        object:
          type: string
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - usage_record
        livemode:
          type: boolean
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
        quantity:
          minimum: 0
          type: integer
          description: The usage quantity for the specified date.
        subscription_item:
          type: string
          description: The ID of the subscription item this usage record contains
            data for.
        timestamp:
          type: integer
          description: The timestamp when this usage occurred.
    newUsageRecord:
      required:
      - quantity
      - subscription_item
      - timestamp
      type: object
      properties:
        quantity:
          minimum: 0
          type: integer
          description: The usage quantity for the specified timestamp.
        subscription_item:
          type: string
          description: The ID of the subscription item this usage record contains
            data for.
        timestamp:
          type: integer
          description: The timestamp for the usage event. This timestamp must be within
            the current billing period of the subscription of the provided `subscription_item`.
        action:
          type: integer
          description: Valid values are `increment` (default) or `set`. When using
            `increment` the specified `quantity` will be added to the usage at the
            specified timestamp. The `set` action will overwrite the usage quantity
            at that timestamp. If the subscription has [billing thresholds](https://stripe.com/docs/api/subscriptions/object#subscription_object-billing_thresholds),
            `increment` is the only allowed value.
    usageRecordSummary:
      type: object
      properties:
        object:
          type: string
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - list
        url:
          type: string
          description: URL of the subscription item summaries.
        has_more:
          type: boolean
          description: Whether or not there are more elements available after this
            set. If `false`, this set comprises the end of the list.
        data:
          type: array
          items:
            $ref: '#/components/schemas/usageRecordData'
      description: A dictionary with a `data` property that contains an array of up
        to `limit` summaries, starting after summary `starting_after`. Each entry
        in the array is a separate summary object. If no more summaries are available,
        the resulting array is empty.
    usageRecordData:
      type: object
      properties:
        id:
          type: string
          description: ID of the usage record.
        object:
          type: string
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - usage_record_summary
        invoice:
          type: string
          description: ID of the invoice.
        livemode:
          type: boolean
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
        period:
          type: object
          properties:
            end:
              type: integer
              description: Ending timestamp.
            start:
              type: integer
              description: Starting timestamp.
          description: Time period.
        subscription_item:
          type: string
          description: ID of the subscription item.
        total_usage:
          type: integer
          description: The total number of usage records in the billing plan.
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic